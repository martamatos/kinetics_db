"""starting from scratch

Revision ID: 212eeecb56ee
Revises: 
Create Date: 2019-01-14 16:23:08.000740

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '212eeecb56ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('orcid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chebi_ids',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chebi_id', sa.Integer(), nullable=True),
    sa.Column('inchi', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compartment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bigg_id', sa.String(), nullable=True),
    sa.Column('metanetx_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bigg_id'),
    sa.UniqueConstraint('metanetx_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_compartment_id'), 'compartment', ['id'], unique=True)
    op.create_table('enzyme',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('acronym', sa.String(), nullable=True),
    sa.Column('isoenzyme', sa.String(), nullable=False),
    sa.Column('ec_number', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isoenzyme')
    )
    op.create_index(op.f('ix_enzyme_timestamp'), 'enzyme', ['timestamp'], unique=False)
    op.create_table('evidence_level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_gene_timestamp'), 'gene', ['timestamp'], unique=False)
    op.create_table('gibbs_energy',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('standard_dg', sa.Float(), nullable=True),
    sa.Column('standard_dg_std', sa.Float(), nullable=True),
    sa.Column('ph', sa.Float(), nullable=True),
    sa.Column('ionic_strength', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mechanism',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metabolite',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grasp_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bigg_id', sa.String(), nullable=True),
    sa.Column('metanetx_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bigg_id'),
    sa.UniqueConstraint('grasp_id')
    )
    op.create_index(op.f('ix_metabolite_timestamp'), 'metabolite', ['timestamp'], unique=False)
    op.create_table('organism',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_organism_timestamp'), 'organism', ['timestamp'], unique=False)
    op.create_table('reference_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('enzyme_complex_subunit',
    sa.Column('enzyme_complex_id', sa.Integer(), nullable=True),
    sa.Column('enzyme_subunit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_complex_id'], ['enzyme.id'], ),
    sa.ForeignKeyConstraint(['enzyme_subunit_id'], ['enzyme.id'], )
    )
    op.create_table('enzyme_gene_organism',
    sa.Column('gene_id', sa.Integer(), nullable=False),
    sa.Column('enzyme_id', sa.Integer(), nullable=False),
    sa.Column('organism_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enzyme_id'], ['enzyme.id'], ),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.id'], ),
    sa.ForeignKeyConstraint(['organism_id'], ['organism.id'], ),
    sa.PrimaryKeyConstraint('gene_id', 'enzyme_id', 'organism_id')
    )
    op.create_table('enzyme_organism',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enzyme_id', sa.Integer(), nullable=False),
    sa.Column('organism_id', sa.Integer(), nullable=False),
    sa.Column('uniprot_id', sa.String(), nullable=False),
    sa.Column('n_active_sites', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_id'], ['enzyme.id'], ),
    sa.ForeignKeyConstraint(['organism_id'], ['organism.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uniprot_id')
    )
    op.create_table('enzyme_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enzyme_id', sa.Integer(), nullable=False),
    sa.Column('organism_id', sa.Integer(), nullable=False),
    sa.Column('pdb_id', sa.String(), nullable=True),
    sa.Column('strain', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_id'], ['enzyme.id'], ),
    sa.ForeignKeyConstraint(['organism_id'], ['organism.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pdb_id')
    )
    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], )
    )
    op.create_table('metabolite_chebi',
    sa.Column('metabolite_id', sa.Integer(), nullable=True),
    sa.Column('chebi_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chebi_id'], ['chebi_ids.id'], ),
    sa.ForeignKeyConstraint(['metabolite_id'], ['metabolite.id'], )
    )
    op.create_table('metabolite_compartment',
    sa.Column('metabolite_id', sa.Integer(), nullable=True),
    sa.Column('compartment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compartment_id'], ['compartment.id'], ),
    sa.ForeignKeyConstraint(['metabolite_id'], ['metabolite.id'], )
    )
    op.create_table('model',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('organism_name', sa.String(), nullable=True),
    sa.Column('strain', sa.String(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organism_name'], ['organism.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_model_timestamp'), 'model', ['timestamp'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('body', sa.String(length=140), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_timestamp'), 'post', ['timestamp'], unique=False)
    op.create_table('reaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('acronym', sa.String(), nullable=True),
    sa.Column('metanetx_id', sa.String(), nullable=True),
    sa.Column('bigg_id', sa.String(), nullable=True),
    sa.Column('kegg_id', sa.String(), nullable=True),
    sa.Column('compartment_name', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['compartment_name'], ['compartment.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('acronym')
    )
    op.create_index(op.f('ix_reaction_timestamp'), 'reaction', ['timestamp'], unique=False)
    op.create_table('reference',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pmid', sa.Integer(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['reference_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reference_timestamp'), 'reference', ['timestamp'], unique=False)
    op.create_table('enzyme_reaction_organism',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enzyme_id', sa.Integer(), nullable=False),
    sa.Column('reaction_id', sa.Integer(), nullable=False),
    sa.Column('organism_id', sa.Integer(), nullable=False),
    sa.Column('mechanism_id', sa.Integer(), nullable=True),
    sa.Column('mech_evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('grasp_id', sa.String(), nullable=True),
    sa.Column('subs_binding_order', sa.String(), nullable=True),
    sa.Column('prod_release_order', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_id'], ['enzyme.id'], ),
    sa.ForeignKeyConstraint(['mech_evidence_level_id'], ['evidence_level.id'], ),
    sa.ForeignKeyConstraint(['mechanism_id'], ['mechanism.id'], ),
    sa.ForeignKeyConstraint(['organism_id'], ['organism.id'], ),
    sa.ForeignKeyConstraint(['reaction_id'], ['reaction.id'], ),
    sa.PrimaryKeyConstraint('enzyme_id', 'reaction_id', 'organism_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('gibbs_energy_reaction_model',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('gibbs_energy_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('reaction_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gibbs_energy_id'], ['gibbs_energy.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ),
    sa.ForeignKeyConstraint(['reaction_id'], ['reaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_assumptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('assumption', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('included_in_model', sa.Boolean(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['evidence_level_id'], ['evidence_level.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reaction_metabolite',
    sa.Column('reaction_id', sa.Integer(), nullable=False),
    sa.Column('metabolite_id', sa.Integer(), nullable=False),
    sa.Column('compartment_id', sa.Integer(), nullable=False),
    sa.Column('stoich_coef', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compartment_id'], ['compartment.id'], ),
    sa.ForeignKeyConstraint(['metabolite_id'], ['metabolite.id'], ),
    sa.ForeignKeyConstraint(['reaction_id'], ['reaction.id'], ),
    sa.PrimaryKeyConstraint('reaction_id', 'metabolite_id', 'compartment_id')
    )
    op.create_table('reference_author',
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('reference_gibbs_energy',
    sa.Column('gibbs_energy_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gibbs_energy_id'], ['gibbs_energy.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('enzyme_reaction_activation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enz_rxn_org_id', sa.Integer(), nullable=True),
    sa.Column('activator_met_id', sa.Integer(), nullable=True),
    sa.Column('activation_constant', sa.Float(), nullable=True),
    sa.Column('evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['activator_met_id'], ['metabolite.id'], ),
    sa.ForeignKeyConstraint(['enz_rxn_org_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['evidence_level_id'], ['evidence_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enzyme_reaction_effector',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enz_rxn_org_id', sa.Integer(), nullable=True),
    sa.Column('effector_met_id', sa.Integer(), nullable=True),
    sa.Column('effector_type', sa.String(), nullable=True),
    sa.Column('evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['effector_met_id'], ['metabolite.id'], ),
    sa.ForeignKeyConstraint(['enz_rxn_org_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['evidence_level_id'], ['evidence_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enzyme_reaction_inhibition',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enz_rxn_org_id', sa.Integer(), nullable=True),
    sa.Column('inhibitor_met_id', sa.Integer(), nullable=True),
    sa.Column('affected_met_id', sa.Integer(), nullable=True),
    sa.Column('inhibition_type', sa.String(), nullable=True),
    sa.Column('inhibition_constant', sa.Float(), nullable=True),
    sa.Column('evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['affected_met_id'], ['metabolite.id'], ),
    sa.ForeignKeyConstraint(['enz_rxn_org_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['evidence_level_id'], ['evidence_level.id'], ),
    sa.ForeignKeyConstraint(['inhibitor_met_id'], ['metabolite.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enzyme_reaction_misc_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enz_rxn_org_id', sa.Integer(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evidence_level_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['enz_rxn_org_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['evidence_level_id'], ['evidence_level.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enzyme_reaction_organism_model',
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('enzyme_reaction_organism_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_reaction_organism_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], )
    )
    op.create_table('reference_mechanism',
    sa.Column('mechanism_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mechanism_id'], ['enzyme_reaction_organism.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('reference_model_assumptions',
    sa.Column('model_assumptions_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['model_assumptions_id'], ['model_assumptions.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('enzyme_reaction_activation_model',
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('activation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activation_id'], ['enzyme_reaction_activation.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], )
    )
    op.create_table('enzyme_reaction_effector_model',
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('effector_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['effector_id'], ['enzyme_reaction_effector.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], )
    )
    op.create_table('enzyme_reaction_inhibition_model',
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('inhibition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inhibition_id'], ['enzyme_reaction_inhibition.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], )
    )
    op.create_table('enzyme_reaction_misc_info_model',
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('misc_info_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['misc_info_id'], ['enzyme_reaction_misc_info.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], )
    )
    op.create_table('reference_activation',
    sa.Column('activation_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activation_id'], ['enzyme_reaction_activation.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('reference_effector',
    sa.Column('effector_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['effector_id'], ['enzyme_reaction_effector.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('reference_inhibition',
    sa.Column('inhibition_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inhibition_id'], ['enzyme_reaction_inhibition.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('reference_misc_info',
    sa.Column('misc_info_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['misc_info_id'], ['enzyme_reaction_misc_info.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reference_misc_info')
    op.drop_table('reference_inhibition')
    op.drop_table('reference_effector')
    op.drop_table('reference_activation')
    op.drop_table('enzyme_reaction_misc_info_model')
    op.drop_table('enzyme_reaction_inhibition_model')
    op.drop_table('enzyme_reaction_effector_model')
    op.drop_table('enzyme_reaction_activation_model')
    op.drop_table('reference_model_assumptions')
    op.drop_table('reference_mechanism')
    op.drop_table('enzyme_reaction_organism_model')
    op.drop_table('enzyme_reaction_misc_info')
    op.drop_table('enzyme_reaction_inhibition')
    op.drop_table('enzyme_reaction_effector')
    op.drop_table('enzyme_reaction_activation')
    op.drop_table('reference_gibbs_energy')
    op.drop_table('reference_author')
    op.drop_table('reaction_metabolite')
    op.drop_table('model_assumptions')
    op.drop_table('gibbs_energy_reaction_model')
    op.drop_table('enzyme_reaction_organism')
    op.drop_index(op.f('ix_reference_timestamp'), table_name='reference')
    op.drop_table('reference')
    op.drop_index(op.f('ix_reaction_timestamp'), table_name='reaction')
    op.drop_table('reaction')
    op.drop_index(op.f('ix_post_timestamp'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_model_timestamp'), table_name='model')
    op.drop_table('model')
    op.drop_table('metabolite_compartment')
    op.drop_table('metabolite_chebi')
    op.drop_table('followers')
    op.drop_table('enzyme_structure')
    op.drop_table('enzyme_organism')
    op.drop_table('enzyme_gene_organism')
    op.drop_table('enzyme_complex_subunit')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('reference_type')
    op.drop_index(op.f('ix_organism_timestamp'), table_name='organism')
    op.drop_table('organism')
    op.drop_index(op.f('ix_metabolite_timestamp'), table_name='metabolite')
    op.drop_table('metabolite')
    op.drop_table('mechanism')
    op.drop_table('gibbs_energy')
    op.drop_index(op.f('ix_gene_timestamp'), table_name='gene')
    op.drop_table('gene')
    op.drop_table('evidence_level')
    op.drop_index(op.f('ix_enzyme_timestamp'), table_name='enzyme')
    op.drop_table('enzyme')
    op.drop_index(op.f('ix_compartment_id'), table_name='compartment')
    op.drop_table('compartment')
    op.drop_table('chebi_ids')
    op.drop_table('author')
    # ### end Alembic commands ###
